<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="net.sf.anathema.campaign.plot" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="net.sf.anathema.campaign.plot" id="units" name="Plot Unit"/>
      </appinfo>
      <documentation>
         Used to register plot units.
Plot units are a generic abstraction of the time units introduced in the Exalted Second Edition Core rules. They form a hierarchy of names upon which a stories flow can be based.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="unit"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="unit">
      <annotation>
         <appinfo>
            <meta.element icon="icon"/>
         </appinfo>
         <documentation>
            The plot unit.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  An unique ID, used to create parent-child relations.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  A human-readable name, displayed to the user.
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  The unit&apos;s icon, used in editors and resource views.
               </documentation>
               <appinfo>
                  <meta.attribute kind="resource"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="parentId" type="string">
            <annotation>
               <documentation>
                  This unit&apos;s parent&apos;s id, if any. If no parent ID is specified, a new root unit is created.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="recursive" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  Whether or not the unit is recursive. If it is, it will accept plot elements of it&apos;s own unit type as children.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         2.0.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         Registers the &quot;Story&quot; unit with the platform.
After icon, id and name are defined, the unit is connected to its parent unit (&quot;Plot&quot;) and at the same time marked as non-recursive, meaning that it will have children that differ from itself.
&lt;extension
         point=&quot;net.sf.anathema.campaign.plot.units&quot;&gt;
        &lt;unit
            icon=&quot;icons/FolderStory16.png&quot;
            id=&quot;net.sf.anathema.plot.unit.story&quot;
            name=&quot;%plotunit.unit.story&quot;
            parentId=&quot;net.sf.anathema.plot.unit.plot&quot;
            recursive=&quot;false&quot;&gt;
      &lt;/unit&gt;
&lt;/extension&gt;
      </documentation>
   </annotation>


   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         Class net.sf.anathema.campaign.plot.repository.PlotUnitProvider provides access to the hierarchy of units via its public getRootUnit() method.
      </documentation>
   </annotation>


</schema>
