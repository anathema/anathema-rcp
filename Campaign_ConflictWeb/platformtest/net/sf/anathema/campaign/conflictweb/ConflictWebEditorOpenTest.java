package net.sf.anathema.campaign.conflictweb;

import static org.junit.Assert.*;

import java.io.ByteArrayInputStream;

import net.sf.anathema.basics.repository.access.RepositoryUtilities;
import net.sf.anathema.basics.repository.itemtype.IItemType;
import net.sf.anathema.basics.repository.treecontent.itemtype.ResourceEditorOpener;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IProject;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.NullProgressMonitor;
import org.eclipse.core.runtime.Path;
import org.eclipse.ui.IEditorPart;
import org.eclipse.ui.IWorkbenchPage;
import org.eclipse.ui.IWorkbenchWindow;
import org.eclipse.ui.PlatformUI;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class ConflictWebEditorOpenTest {

  private IFile file;
  private IItemType itemType;

  @Before
  public void createConflictWebFile() throws CoreException {
    String basicConflictWebXml = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n" //$NON-NLS-1$
        + "<conflictWeb bundleVersion=\"1.0.0\">\r\n" //$NON-NLS-1$
        + "  <Name><![CDATA[Wetter]]></Name>\r\n" //$NON-NLS-1$
        + "</conflictWeb>"; //$NON-NLS-1$
    itemType = ConflictWebRepositoryUtilities.getItemType();
    IProject project = RepositoryUtilities.getProject(itemType);
    file = project.getFile(new Path("Wetter.conflict")); //$NON-NLS-1$
    file.create(new ByteArrayInputStream(basicConflictWebXml.getBytes()), true, new NullProgressMonitor());
  }

  @Test
  public void conflictWebEditorIsOpened() throws Exception {
    ResourceEditorOpener opener = new ResourceEditorOpener(file, "untitled name", itemType.getIconUrl()); //$NON-NLS-1$
    IWorkbenchWindow workbenchWindow = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
    IWorkbenchPage page = workbenchWindow.getActivePage();
    opener.openEditor(page);
    IEditorPart activeEditor = page.getActiveEditor();
    assertTrue(activeEditor instanceof ConflictWebEditor);
    page.closeEditor(activeEditor, false);
  }

  @After
  public void deleteConflictWebFile() throws CoreException {
    if (file != null && !file.exists()) {
      file.delete(true, new NullProgressMonitor());
    }
  }
}